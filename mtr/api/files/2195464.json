{"id":"2195464","content":"package org.springdoc.core;\n\nimport java.util.LinkedHashSet;\nimport java.util.Set;\nimport java.util.function.Function;\nimport java.util.function.Supplier;\nimport java.util.stream.Collectors;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springdoc.core.AbstractSwaggerUiConfigProperties.SwaggerUrl;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Lazy;\n\n@Lazy(false)\n@Configuration(\n   proxyBeanMethods = false\n)\n@ConfigurationProperties(\n   prefix = \"springdoc.swagger-ui\"\n)\n@ConditionalOnProperty(\n   name = {\"springdoc.swagger-ui.enabled\"},\n   matchIfMissing = true\n)\n@ConditionalOnBean({SpringDocConfiguration.class})\npublic class SwaggerUiConfigProperties extends AbstractSwaggerUiConfigProperties {\n   private boolean disableSwaggerDefaultUrl;\n   private String version;\n   private SwaggerUiConfigProperties.Csrf csrf = new SwaggerUiConfigProperties.Csrf();\n   private SwaggerUiConfigProperties.SyntaxHighlight syntaxHighlight = new SwaggerUiConfigProperties.SyntaxHighlight();\n   private boolean enabled = true;\n   private boolean useRootPath;\n\n   public String getVersion() {\n      return this.version;\n   }\n\n   public void setVersion(String version) {\n      this.version = version;\n   }\n\n   public boolean isUseRootPath() {\n      return this.useRootPath;\n   }\n\n   public void setUseRootPath(boolean useRootPath) {\n      this.useRootPath = useRootPath;\n   }\n\n   public boolean isEnabled() {\n      return this.enabled;\n   }\n\n   public void setEnabled(boolean enabled) {\n      this.enabled = enabled;\n   }\n\n   public boolean isDisableSwaggerDefaultUrl() {\n      return this.disableSwaggerDefaultUrl;\n   }\n\n   public void setDisableSwaggerDefaultUrl(boolean disableSwaggerDefaultUrl) {\n      this.disableSwaggerDefaultUrl = disableSwaggerDefaultUrl;\n   }\n\n   public SwaggerUiConfigProperties.Csrf getCsrf() {\n      return this.csrf;\n   }\n\n   public void setCsrf(SwaggerUiConfigProperties.Csrf csrf) {\n      this.csrf = csrf;\n   }\n\n   public boolean isCsrfEnabled() {\n      return this.csrf.isEnabled();\n   }\n\n   public SwaggerUiConfigProperties.SyntaxHighlight getSyntaxHighlight() {\n      return this.syntaxHighlight;\n   }\n\n   public void setSyntaxHighlight(SwaggerUiConfigProperties.SyntaxHighlight syntaxHighlight) {\n      this.syntaxHighlight = syntaxHighlight;\n   }\n\n   public Set<SwaggerUrl> cloneUrls() {\n      return (Set)this.urls.stream().map((swaggerUrl) -> {\n         return new SwaggerUrl(swaggerUrl.getName(), swaggerUrl.getUrl(), swaggerUrl.getDisplayName());\n      }).collect(Collectors.toCollection(LinkedHashSet::new));\n   }\n\n   public static class SyntaxHighlight {\n      private Boolean activated;\n      private String theme;\n\n      public Boolean getActivated() {\n         return this.activated;\n      }\n\n      public void setActivated(Boolean activated) {\n         this.activated = activated;\n      }\n\n      public String getTheme() {\n         return this.theme;\n      }\n\n      public void setTheme(String theme) {\n         this.theme = theme;\n      }\n\n      public boolean isPresent() {\n         return this.activated != null || StringUtils.isNotEmpty(this.theme);\n      }\n   }\n\n   public static class Csrf {\n      private boolean enabled;\n      private boolean useLocalStorage;\n      private boolean useSessionStorage;\n      private String cookieName = \"XSRF-TOKEN\";\n      private String localStorageKey = \"XSRF-TOKEN\";\n      private String sessionStorageKey = \"XSRF-TOKEN\";\n      private String headerName = \"X-XSRF-TOKEN\";\n\n      public boolean isEnabled() {\n         return this.enabled;\n      }\n\n      public void setEnabled(boolean enabled) {\n         this.enabled = enabled;\n      }\n\n      public boolean isUseLocalStorage() {\n         return this.useLocalStorage;\n      }\n\n      public void setUseLocalStorage(boolean useLocalStorage) {\n         this.useLocalStorage = useLocalStorage;\n      }\n\n      public boolean isUseSessionStorage() {\n         return this.useSessionStorage;\n      }\n\n      public void setUseSessionStorage(boolean useSessionStorage) {\n         this.useSessionStorage = useSessionStorage;\n      }\n\n      public String getCookieName() {\n         return this.cookieName;\n      }\n\n      public void setCookieName(String cookieName) {\n         this.cookieName = cookieName;\n      }\n\n      public String getLocalStorageKey() {\n         return this.localStorageKey;\n      }\n\n      public void setLocalStorageKey(String localStorageKey) {\n         this.localStorageKey = localStorageKey;\n      }\n\n      public String getSessionStorageKey() {\n         return this.sessionStorageKey;\n      }\n\n      public void setSessionStorageKey(String sessionStorageKey) {\n         this.sessionStorageKey = sessionStorageKey;\n      }\n\n      public String getHeaderName() {\n         return this.headerName;\n      }\n\n      public void setHeaderName(String headerName) {\n         this.headerName = headerName;\n      }\n   }\n}\n"}