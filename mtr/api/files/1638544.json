{"id":"1638544","content":"package org.springdoc.webmvc.ui;\n\nimport io.swagger.v3.oas.annotations.Operation;\nimport javax.servlet.http.HttpServletRequest;\nimport org.springdoc.core.SpringDocConfigProperties;\nimport org.springdoc.core.SpringDocUtils;\nimport org.springdoc.core.SwaggerUiConfigParameters;\nimport org.springdoc.core.SwaggerUiConfigProperties;\nimport org.springdoc.core.providers.SpringWebProvider;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\n\n@Controller\npublic class SwaggerWelcomeWebMvc extends SwaggerWelcomeCommon {\n   private final SpringWebProvider springWebProvider;\n   @Value(\"${spring.mvc.servlet.path:#{null}}\")\n   private String mvcServletPath;\n   private String pathPrefix;\n\n   public SwaggerWelcomeWebMvc(SwaggerUiConfigProperties swaggerUiConfig, SpringDocConfigProperties springDocConfigProperties, SwaggerUiConfigParameters swaggerUiConfigParameters, SpringWebProvider springWebProvider) {\n      super(swaggerUiConfig, springDocConfigProperties, swaggerUiConfigParameters);\n      this.springWebProvider = springWebProvider;\n   }\n\n   @Operation(\n      hidden = true\n   )\n   @GetMapping({\"${springdoc.swagger-ui.path:#{T(org.springdoc.core.Constants).DEFAULT_SWAGGER_UI_PATH}}\"})\n   public ResponseEntity<Void> redirectToUi(HttpServletRequest request) {\n      return super.redirectToUi(request);\n   }\n\n   protected void calculateUiRootPath(StringBuilder... sbUrls) {\n      StringBuilder sbUrl = new StringBuilder();\n      if (SpringDocUtils.isValidPath(this.mvcServletPath)) {\n         sbUrl.append(this.mvcServletPath);\n      }\n\n      this.calculateUiRootCommon(sbUrl, sbUrls);\n   }\n\n   protected String buildUrl(String contextPath, String docsUrl) {\n      if (SpringDocUtils.isValidPath(this.mvcServletPath)) {\n         contextPath = contextPath + this.mvcServletPath;\n      }\n\n      return super.buildUrl(contextPath, docsUrl);\n   }\n\n   protected String buildApiDocUrl() {\n      return this.buildUrlWithContextPath(this.springDocConfigProperties.getApiDocs().getPath());\n   }\n\n   protected String buildUrlWithContextPath(String swaggerUiUrl) {\n      if (this.pathPrefix == null) {\n         this.pathPrefix = this.springWebProvider.findPathPrefix(this.springDocConfigProperties);\n      }\n\n      return this.buildUrl(this.contextPath + this.pathPrefix, swaggerUiUrl);\n   }\n\n   protected String buildSwaggerConfigUrl() {\n      return this.apiDocsUrl + \"/\" + \"swagger-config\";\n   }\n}\n"}