{"id":"643296","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>ch.qos.logback</groupId>\n    <artifactId>logback-parent</artifactId>\n    <version>1.2.12</version>\n  </parent>\n\n  <artifactId>logback-classic</artifactId>\n  <packaging>jar</packaging>\n  <name>Logback Classic Module</name>\n  <description>logback-classic module</description>\n\n  <dependencies>\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-core</artifactId>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-api</artifactId>\n      <version>${slf4j.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-ext</artifactId>\n      <version>${slf4j.version}</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>ch.qos.cal10n.plugins</groupId>\n      <artifactId>maven-cal10n-plugin</artifactId>\n      <version>${cal10n.version}</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-api</artifactId>\n      <type>test-jar</type>\n      <version>${slf4j.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>log4j-over-slf4j</artifactId>\n      <version>${slf4j.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>jul-to-slf4j</artifactId>\n      <version>${slf4j.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <!-- Must be after log4j-over-slf4j:\n         * we want to use the classes from log4j-over-slf4j (so it must come first);\n         * we want to use log4j.dtd from log4j. -->\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>1.2.17</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>dom4j</groupId>\n      <artifactId>dom4j</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.mail</groupId>\n      <artifactId>mail</artifactId>\n      <scope>compile</scope>\n      <optional>true</optional>\n    </dependency>\n    <dependency>\n      <groupId>org.codehaus.janino</groupId>\n      <artifactId>janino</artifactId>\n      <scope>compile</scope>\n      <optional>true</optional>\n    </dependency>\n\n      \n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-core</artifactId>\n      <type>test-jar</type>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>integration</artifactId>\n      <version>${slf4j.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>javax.servlet-api</artifactId>\n      <scope>compile</scope>\n      <optional>true</optional>\n    </dependency>\n    <dependency>\n      <groupId>com.icegreen</groupId>\n      <artifactId>greenmail</artifactId>\n      <version>1.3</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.subethamail</groupId>\n      <artifactId>subethasmtp</artifactId>\n      <version>2.1.0</version>\n      <scope>test</scope>\n      <exclusions>\n        <exclusion>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-api</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.felix</groupId>\n      <artifactId>org.apache.felix.main</artifactId>\n      <version>2.0.2</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n  </dependencies>\n\n  <build>\n    <resources>\n      <resource>\n        <directory>src/main/resources</directory>\n      </resource>\n    </resources>\n\n    <plugins>\n     \n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifestFile>\n              ${project.build.outputDirectory}/META-INF/MANIFEST.MF\n            </manifestFile>\n          </archive>\n        </configuration>\n        <executions>\n          <execution>\n            <id>bundle-test-jar</id>\n            <phase>package</phase>\n            <goals>\n              <goal>test-jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <version>1.8</version>\n        <dependencies>\n          <dependency>\n            <groupId>org.apache.ant</groupId>\n            <artifactId>ant-junit</artifactId>\n            <version>1.8.1</version>\n          </dependency>\n          <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${junit.version}</version>\n          </dependency>\n        </dependencies>\n\n        <executions>\n          <execution>\n            <id>ant-osgi-test</id>\n            <phase>package</phase>\n            <configuration>\n              <target>\n                <property name=\"currentVersion\" value=\"${project.version}\"/>\n                <property name=\"slf4j.version\" value=\"${slf4j.version}\"/>\n                <property name=\"basedir\" value=\"${basedir}\"/>\n                <ant antfile=\"${basedir}/osgi-build.xml\"/>\n              </target>\n            </configuration>\n            <goals>\n              <goal>run</goal>\n            </goals>\n          </execution>\n\n          <execution>\n            <id>ant-integration-test</id>\n            <phase>package</phase>\n            <configuration>\n              <target>\n                <property name=\"slf4j.version\" value=\"${slf4j.version}\"/>\n                <ant antfile=\"${basedir}/integration.xml\"/>\n              </target>\n            </configuration>\n            <goals>\n              <goal>run</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <!-- once, never, pertest, always -->\n          <!--<forkMode>once</forkMode>-->\n          <forkCount>1C</forkCount>\n          <reuseForks>false</reuseForks>\n          <reportFormat>plain</reportFormat>\n          <trimStackTrace>false</trimStackTrace>\n          <excludes>\n            <exclude>**/AllClassicTest.java</exclude>\n            <exclude>**/PackageTest.java</exclude>\n            <exclude>**/TestConstants.java</exclude>\n            <exclude>**/test_osgi/BundleTest.java</exclude>\n            <exclude>**/ch/qos/logback/classic/util/InitializationIntegrationTest.java</exclude>\n            <!-- skip performance tests -->\n            <exclude>**/*PerfTest.java</exclude>\n          </excludes>\n        </configuration>\n      </plugin>\n\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <extensions>true</extensions>\n        <executions>\n          <execution>\n            <id>bundle-manifest</id>\n            <phase>process-classes</phase>\n            <goals>\n              <goal>manifest</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <instructions>\n            <Export-Package>ch.qos.logback.classic*, org.slf4j.impl;version=${slf4j.version}</Export-Package>\n            <!-- LB-CLASSIC It is necessary to specify the rolling\n                 file packages as classes are created via IOC (xml\n                 config files). They won't be found by Bnd's analysis\n                 of java code. -->\n            <Import-Package>\n              sun.reflect;resolution:=optional,\n              javax.*;resolution:=optional,\n              org.xml.*;resolution:=optional,\n              org.slf4j,\n              org.slf4j.event,\n              ch.qos.logback.core.rolling,\n              ch.qos.logback.core.rolling.helper,\n              ch.qos.logback.core.util,\n              ch.qos.logback.core.read,\n              *\n            </Import-Package>\n            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>\n          </instructions>\n        </configuration>\n      </plugin>\n    </plugins>\n    <pluginManagement>\n      <plugins>\n        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->\n        <plugin>\n          <groupId>org.eclipse.m2e</groupId>\n          <artifactId>lifecycle-mapping</artifactId>\n          <version>1.0.0</version>\n          <configuration>\n            <lifecycleMappingMetadata>\n              <pluginExecutions>\n              </pluginExecutions>\n            </lifecycleMappingMetadata>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n\n\n</project>\n"}