{"id":"1843248","content":"package ch.qos.logback.core.util;\n\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.ScheduledThreadPoolExecutor;\nimport java.util.concurrent.SynchronousQueue;\nimport java.util.concurrent.ThreadFactory;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.atomic.AtomicInteger;\n\npublic class ExecutorServiceUtil {\n   private static final ThreadFactory THREAD_FACTORY = new ThreadFactory() {\n      private final ThreadFactory defaultFactory = Executors.defaultThreadFactory();\n      private final AtomicInteger threadNumber = new AtomicInteger(1);\n\n      public Thread newThread(Runnable r) {\n         Thread thread = this.defaultFactory.newThread(r);\n         if (!thread.isDaemon()) {\n            thread.setDaemon(true);\n         }\n\n         thread.setName(\"logback-\" + this.threadNumber.getAndIncrement());\n         return thread;\n      }\n   };\n\n   public static ScheduledExecutorService newScheduledExecutorService() {\n      return new ScheduledThreadPoolExecutor(8, THREAD_FACTORY);\n   }\n\n   public static ExecutorService newExecutorService() {\n      return new ThreadPoolExecutor(0, 32, 0L, TimeUnit.MILLISECONDS, new SynchronousQueue(), THREAD_FACTORY);\n   }\n\n   public static void shutdown(ExecutorService executorService) {\n      executorService.shutdownNow();\n   }\n}\n"}