{"id":"5075152","content":"package ch.qos.logback.classic.selector.servlet;\n\nimport ch.qos.logback.classic.LoggerContext;\nimport ch.qos.logback.classic.selector.ContextSelector;\nimport ch.qos.logback.classic.util.ContextSelectorStaticBinder;\nimport ch.qos.logback.core.util.JNDIUtil;\nimport ch.qos.logback.core.util.OptionHelper;\nimport javax.naming.Context;\nimport javax.naming.NamingException;\nimport javax.servlet.ServletContextEvent;\nimport javax.servlet.ServletContextListener;\nimport org.slf4j.Logger;\n\npublic class ContextDetachingSCL implements ServletContextListener {\n   public void contextInitialized(ServletContextEvent arg0) {\n   }\n\n   public void contextDestroyed(ServletContextEvent servletContextEvent) {\n      String loggerContextName = null;\n\n      try {\n         Context ctx = JNDIUtil.getInitialContext();\n         loggerContextName = JNDIUtil.lookupString(ctx, \"java:comp/env/logback/context-name\");\n      } catch (NamingException var6) {\n         ;\n      }\n\n      if (!OptionHelper.isEmpty(loggerContextName)) {\n         System.out.println(\"About to detach context named \" + loggerContextName);\n         ContextSelector selector = ContextSelectorStaticBinder.getSingleton().getContextSelector();\n         if (selector == null) {\n            System.out.println(\"Selector is null, cannot detach context. Skipping.\");\n            return;\n         }\n\n         LoggerContext context = selector.getLoggerContext(loggerContextName);\n         if (context != null) {\n            Logger logger = context.getLogger(\"ROOT\");\n            logger.warn(\"Stopping logger context \" + loggerContextName);\n            selector.detachLoggerContext(loggerContextName);\n            context.stop();\n         } else {\n            System.out.println(\"No context named \" + loggerContextName + \" was found.\");\n         }\n      }\n\n   }\n}\n"}