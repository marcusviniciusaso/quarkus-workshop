{"id":"1380392","content":"package org.springdoc.webmvc.api;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport io.swagger.v3.oas.annotations.Operation;\nimport java.util.List;\nimport java.util.Locale;\nimport javax.servlet.http.HttpServletRequest;\nimport org.springdoc.core.AbstractRequestService;\nimport org.springdoc.core.GenericResponseService;\nimport org.springdoc.core.GroupedOpenApi;\nimport org.springdoc.core.OpenAPIService;\nimport org.springdoc.core.OperationService;\nimport org.springdoc.core.SpringDocConfigProperties;\nimport org.springdoc.core.SpringDocProviders;\nimport org.springdoc.core.customizers.SpringDocCustomizers;\nimport org.springframework.beans.factory.ObjectFactory;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class MultipleOpenApiWebMvcResource extends MultipleOpenApiResource {\n   public MultipleOpenApiWebMvcResource(List<GroupedOpenApi> groupedOpenApis, ObjectFactory<OpenAPIService> defaultOpenAPIBuilder, AbstractRequestService requestBuilder, GenericResponseService responseBuilder, OperationService operationParser, SpringDocConfigProperties springDocConfigProperties, SpringDocProviders springDocProviders, SpringDocCustomizers springDocCustomizers) {\n      super(groupedOpenApis, defaultOpenAPIBuilder, requestBuilder, responseBuilder, operationParser, springDocConfigProperties, springDocProviders, springDocCustomizers);\n   }\n\n   @Operation(\n      hidden = true\n   )\n   @GetMapping(\n      value = {\"${springdoc.api-docs.path:#{T(org.springdoc.core.Constants).DEFAULT_API_DOCS_URL}}/{group}\"},\n      produces = {\"application/json\"}\n   )\n   public byte[] openapiJson(HttpServletRequest request, @Value(\"${springdoc.api-docs.path:#{T(org.springdoc.core.Constants).DEFAULT_API_DOCS_URL}}\") String apiDocsUrl, @PathVariable String group, Locale locale) throws JsonProcessingException {\n      return this.getOpenApiResourceOrThrow(group).openapiJson(request, apiDocsUrl + \"/\" + group, locale);\n   }\n\n   @Operation(\n      hidden = true\n   )\n   @GetMapping(\n      value = {\"${springdoc.api-docs.path:#{T(org.springdoc.core.Constants).DEFAULT_API_DOCS_URL}}.yaml/{group}\"},\n      produces = {\"application/vnd.oai.openapi\"}\n   )\n   public byte[] openapiYaml(HttpServletRequest request, @Value(\"${springdoc.api-docs.path:#{T(org.springdoc.core.Constants).DEFAULT_API_DOCS_URL}}.yaml\") String apiDocsUrl, @PathVariable String group, Locale locale) throws JsonProcessingException {\n      return this.getOpenApiResourceOrThrow(group).openapiYaml(request, apiDocsUrl + \"/\" + group, locale);\n   }\n}\n"}