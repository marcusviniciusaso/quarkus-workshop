Number Of Executions, Total Milliseconds,  Milliseconds per execution, Type
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.DataSourceModel).gremlin().has(isXA,EQUALS,false).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Scheduled).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Istio).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Derby Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Akka Testkit).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,iLog).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RabbitMQ Client).as(default)"
     2,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.DataSourceModel).gremlin().has(isXA,EQUALS,true).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PrimeFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Clustering Web Session).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,DbUnit).as(default)"
  2671,   2929,     1,10, "TypeReferenceService.createTypeReference(fileModel,location,lineNumber,columnNumber,length,source)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.WindupJavaConfigurationModel).gremlin().has(classNotFoundAnalysisEnabled,EQUALS,true).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cactus).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/liquibase$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SubCut).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TieFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SNMP4J).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSON-B).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Shiro).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Test Interface).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(38b878f3-d775-48c5-9e38-c94a132fa3bc)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Zbus Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Geronimo).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MariaDB Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Unitils).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Orion Web XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,tinylog).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,H2 Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Resource Adapter).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate OGM).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logback).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Trunk JGuard).as(default)"
     1,     44,    44,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/apache/kafka/clients/admin$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JaxRSWebServiceModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Handlebars).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/com/arjuna/ats/arjuna$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.graph.model.DuplicateArchiveModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kodein).as(default)"
     1,  13172, 13172,00, FernflowerDecompilationOperation.perform
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(f4d2e68b-d5f5-42a2-a3d1-944907a8c2f8)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Auto-configuration).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mixer).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kibana).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).gremlin().has(sessionType,EQUALS,Stateful).as(default)"
  1327,   5234,     3,94, ClassFilePreDecompilationScan.perform()
     2,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JspSourceFileModel).as(default)
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/dynamodb$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Web XML).as(default)"
  3022,    420,     0,14, GraphService.findAllByProperty(qualifiedName)
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JsfSourceFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EJB XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,LevelDB Client).as(default)"
  8369,   1095,     0,13, GraphService.findAllByProperty(filePath)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jukito).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Google Guice).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,UberFire).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Nuxeo JTA/JCA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSTL).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*teiid.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Servlet).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMockit).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Karaf).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OCPsoft Logging Utils).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JFreeChart).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(ec5c4bfc-c586-4780-85cd-738bed32485b)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Web).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RichFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring JMX).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Data).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/mariadb/jdbc$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OWASP CSRF Guard).as(default)"
     1,      4,     4,00, Query.fromType(org.jboss.windup.rules.apps.java.model.project.MavenProjectModel).as(default)
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/fabric8/openshift/client$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JCunit).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.xml.model.DoctypeMetaModel).gremlin()org.jboss.windup.rules.apps.javaee.rules.DiscoverHibernateConfigurationRuleProvider$1@5c149286.as(default)
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).as(default)
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.java.model.JavaSourceFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spock).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).gremlin().has(sessionType,EQUALS,Stateless).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle DB Driver).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere WS Extension).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Application Properties File).as(default)"
     1,     39,    39,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/hibernate/reactive/adaptor/impl$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Vlad).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Axis).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Pega).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SAML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Easy Rules).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MinLog).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons Validator).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging Utils).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Applet).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ka DI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WF Core JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JGoodies).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(csv,EQUALS,true).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EtlUnit).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AMQP Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,CDI XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ignite JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Axion Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Infinispan).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EAR).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*infinispan.*\.jar$).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*swarmcache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mockito).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Camunda).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Injekt for Kotlin).as(default)"
     1,     64,    64,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(filePath,CONTAINS_TOKEN,webapp).has(isDirectory,EQUALS,false).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,3scale).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache HBase Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,NLOG4J).as(default)"
     1,    190,   190,00, "TypeReferenceService.getPackageUseFrequencies(projectModel,nameDepth,recursive)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-ejb-jar-ext.xmi).has(rootTagName,EQUALS,EJBJarExtension).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Neo4j).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Monolog).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MiGLayout).as(default)"
     1,      1,     1,00, Query.fromType(org.jboss.windup.rules.apps.java.archives.model.IdentifiedArchiveModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MongoDB Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenSAML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Magicgrouplayout).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Ignite).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JAXR).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logstash).as(default)"
     1,     52,    52,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/eclipse/yasson$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BabbageFaces).as(default)"
     1,      1,     1,00, Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jetty).as(default)"
    20,      2,     0,10, org.jboss.windup.reporting.config.HasHint
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,CDI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMock).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java Transaction API).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Talend ESB).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Specsy).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,http://java.sun.com/xml/ns/persistence).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Twitter Util Logging).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.CssFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Axis2).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Cloud Function).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jakarta EE XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Sirona JTA).as(default)"
     1,      2,     2,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,pom.xml).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,LiferayFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss EJB XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Synapse).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cloudera).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.java.model.WindupJavaConfigurationModel).as(default)
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JAXB).as(default)"
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/ssm$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.RemoteServiceModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSS4J).as(default)"
     2,      1,     0,50, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Liferay).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Properties).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Application Insights).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,datasources).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ICEfaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Geronimo JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scaldi).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Quartz).as(default)"
     1,     67,    67,00, Query.fromType(org.jboss.windup.graph.model.resource.FileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HavaRunner).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KumuluzEE JTA).as(default)"
 16472,     12,     0,00, TypeInterestFactory.matchesAny(text).manualSearch
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-ejb-jar-bnd.xmi).has(rootTagName,EQUALS,EJBJarBinding).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Cloud Config).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XACML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EasyMock).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jersey).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Needle).as(default)"
 54016,     29,     0,00, TypeInterestFactory.matchesAny(text)
   456,     40,     0,09, GraphService.findAllByProperty(name)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,orion-ejb-jar).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPLEMENTS_TYPE]).as(ad2de2bc-6eb2-43fb-b340-f7deb645ef34)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Eureka).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Blitz4j).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MEJB).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.java.ip.HardcodedIPLocationModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ehcache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SWT).as(default)"
     1,     39,    39,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/ses$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring DI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Camel Messaging Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Blaze).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Tornado Inject).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPAPersistenceUnitModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Dynacache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SwarmCache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Feign).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Narayana Arjuna).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Batch API).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Dynatrace).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MultithreadedTC).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons Logging).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*memcached.*\.jar$).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/fabric8/kubernetes/client$).as(default)"
     3,      1,     0,33, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(filePath,EQUALS,/Users/marolive/Documents/workspace/bradesco/quarkus-workshop/mtr-result/archives/chapter-3-spring-rest-json-0.0.1-SNAPSHOT.jar/BOOT-INF/lib/springdoc-openapi-common-1.8.0.jar/pom.xml).as(pom-files-chapter-3-spring-rest-json-0.0.1-SNAPSHOT.jar/BOOT-INF/lib/springdoc-openapi-common-1.8.0.jar)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Evo JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OWASP ESAPI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Winter).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Tomcat).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*cache-api.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MySQL Driver).as(default)"
     2,      1,     0,50, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JNLP).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Memcached client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenPojo).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMustache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).gremlin().has(destinationType,EQUALS,QUEUE).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,ejb-jar).has(fileName,EQUALS,jboss-ejb3.xml).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Play Test).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JCache).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ShiftOne).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Trimou).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Elastic APM).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Wicket).as(default)"
     1,     49,    49,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/agroal/api$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Twirl).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Concordion).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Coherence).as(default)"
     1,     52,    52,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/opentelemetry/exporter/jaeger$).as(default)"
     1,      2,     2,00, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).gremlin()org.jboss.windup.config.query.Query$1@597b69da.as(default)
     6,     23,     3,83, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BeanInject).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBossMQ Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KouInject).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Log4J).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging to Socket Handler).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Swing).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle ADF).as(default)"
     1,      1,     1,00, Query.as(d00696f0-ef4c-4acd-ae2c-b451bd4ba067)
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/apache/avro$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Petals EIP).as(default)"
     1,      0,     0,00, Query.as(21d946fe-a4c0-4cb7-b6d8-e67bcfc20a1c)
   207,    286,     1,38, Classification.performParameterized
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HibernateEntityModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBPM).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TestNG).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JACC).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TensorFlow).as(default)"
   113,     20,     0,18, GraphService.findAllByProperty(stats.name)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSDL).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT, METHOD_CALL]).as(1e9745e1-32f9-4744-b006-44c7aeaa55f8)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.xml.model.DoctypeMetaModel).gremlin()org.jboss.windup.rules.apps.javaee.rules.DiscoverHibernateMappingRuleProvider$1@2b2cbbcc.as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,weblogic-web-app).as(default)"
     1,      4,     4,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(093b18b4-7676-4ef8-81a8-91647bac853a)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Lumberjack).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OW2 Log Util).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Log4s).as(default)"
     1,      7,     7,00, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).gremlin()org.jboss.windup.config.query.Query$1@78af15e0.as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Micro DI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,web-app).has(fileName,NOT_EQUALS,geronimo-web.xml).as(default)"
     1,      4,     4,00, Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin()org.jboss.windup.rules.apps.java.scan.provider.DiscoverFilesAndTypesRuleProvider$$Lambda$693/0x00000008013946d8@168c8578.as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SSL).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*coherence.*\.jar$).as(default)"
     2,      1,     0,50, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSF).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Vaadin).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Integration).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/liquibase/ext/mongodb/change$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Snippetory Template Engine).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JayWire).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MapR).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Demoiselle JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Bouncy Castle).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JavaFX).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Common Annotations).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/flywaydb/core$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hamcrest).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JFunk).as(default)"
    12,     35,     2,92, DiscoverPropertiesFilesRuleProvider.perform
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Batch).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RandomizedTesting Runner).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*shiftone.*\.jar$).as(default)"
     1,      3,     3,00, Query.as(e0aebdf4-9431-43ea-b2d5-fcdff21687bb)
     1,      0,     0,00, Query.as(e2c47885-7376-402a-8d83-bb072089bd6c)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Polyforms DI).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Weka).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Transactions).as(default)"
     1,   1831,  1831,00, org.jboss.windup.graph.GraphContextFactory.create(Path)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Iroh).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/opentelemetry/exporter/otlp/trace$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apiman).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Actuator).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Cache).as(default)"
   121,     64,     0,53, GraphService.findAllByProperty(mavenIdentifier)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cucumber).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XFire).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Swagger).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate Cfg).as(default)"
     2,      1,     0,50, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spark).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HibernateConfigurationFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SwitchYard).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ANTLR StringTemplate).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.reporting.model.ApplicationReportModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Cache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Play).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/jboss/stm$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Airframe).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HighFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MyFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSilver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HornetQ Client).as(default)"
   294,   1270,     4,32, Hint.performParameterized
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GFC Logging).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Water Template Engine).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WS Metadata).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Acegi Security).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/sns$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OmniFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Transactions).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Portlet).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Configuration).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Grapht DI).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Santuario).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Messaging Client).as(default)"
   169,    171,     1,01, TechnologyTag.performParameterized
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SQLite Driver).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(1eaff1f2-7f9b-493a-909a-e5d919cde4f5)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Elasticsearch).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mule).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbDeploymentDescriptorModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Mahout).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/hibernate/search/backend/elasticsearch/aws/cfg$).as(default)"
     1,      9,     9,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPLEMENTS_TYPE]).as(6e980fdc-b258-4e8b-a7cb-215f8d51255d)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OAUTH).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MckoiSQLDB Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jamon).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSP).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring MVC).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Peaberry).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Test).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KLogger).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OPS4J Pax Logging Service).as(default)"
     1,     40,    40,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/apache/activemq/artemis/api/jms$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Webmacro).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Component Scan).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mycontainer JTA).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/jboss/resteasy/annotations/providers/multipart$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Plexus Container).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kotlin Logging).as(default)"
     1,      0,     0,00, Query.as(985acc09-b087-432d-84d5-25e3a53ab334)
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/apache/kafka/streams$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Teiid).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Qpid Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate Mapping).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ikasan).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GlassFish JTA).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EclipseLink).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,FormLayoutMaker).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPANamedQueryModel).as(default)
  3847,   2159,     0,56, "FileService.createByFilePath(parentFile, filePath)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ButterFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA Matchers).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cfg Engine).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Rythm Template Engine).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Javax Inject).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Composite Logging JCL).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Sticky Configured).as(default)"
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/smallrye/config/source/yaml$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.RMIServiceModel).as(default)
     1,     46,    46,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/iam$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Zipkin).as(default)"
     1,     10,    10,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons JCS).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(bca27fc7-51b1-4295-971c-896d4a0ce01f)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,process-definition).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Orion EJB XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Drools).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Avalon Logkit).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-webservices-bnd.xmi).has(rootTagName,EQUALS,WSBinding).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,ejb-jar).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Microsoft SQL Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Eclipse RCP).as(default)"
   207,     23,     0,11, GraphService.findAllByProperty(ClassificationModel-classification)
     1,     77,    77,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/springframework/web$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,orion-web-app).as(default)"
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/com/amazonaws/services/lambda/runtime$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JNDIResourceModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Stripes).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Thymeleaf).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OTR4J).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Tapestry).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Morphia).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Clustering EJB).as(default)"
   549,    421,     0,77, GraphService.findAllByPropertyMatchingRegex(filePath)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HTTP Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-web-bnd.xmi).as(default)"
     1,     46,    46,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/com/amazonaws/xray/interceptors$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(exportSummary,EQUALS,true).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Flume).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Redis).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BootsFaces).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Camel).as(default)"
    43,     13,     0,30, GraphService.findAllByProperty(sha1Hash)
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.yaml.model.YamlFileModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Hadoop).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,jboss).has(fileName,EQUALS,jboss.xml).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PostgreSQL Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AKKA JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SLF4J).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hazelcast).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GIN).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scalate).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JsFileModel).as(default)
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Connector XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GWT).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HtmlFileModel).as(default)
     1,      0,     0,00, Query.as(2c3af069-4e1a-4104-b531-9cdd77db8b03)
     2,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.SpringBeanModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere EJB).as(default)"
     5,     23,     4,60, Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).as(default)
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*camel.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jasypt).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oscache).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,New Relic).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jakarta EE Client XML).as(default)"
   188,      4,     0,02, FilePathComparator
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EJB Timer).as(default)"
     2,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbMessageDrivenModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mule Functional Test Framework).as(default)"
     1,     66,    66,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JavaClassFileModel).gremlin().has(parseError,NOT_DEFINED,null).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Struts).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicketLink).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Macros).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSO2).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Syringe).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(db011444-f470-4572-ad7f-1be9fcc1b676)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JUnit).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MRules).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,FreeMarker).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JDBC).as(default)"
   188,    684,     3,64, JavaClass.evaluate
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Log.io).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,weblogic-ejb-jar).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Properties).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JaxWSWebServiceModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Silk DI).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*commons-jcs.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AngularFaces).as(default)"
     2,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsConnectionFactoryModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jetbrick Template).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ServiceMix).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Amazon SQS Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Client XML).as(default)"
    73,    388,     5,32, XmlFile.evaluate
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OW2 JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Accumulo Client).as(default)"
  1154,     56,     0,05, GraphService.addTypeToModel
     1,   7892,  7892,00, AnalyzeJavaFilesRuleProvider.analyzeFile
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HSQLDB Driver).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,DVSL).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss logging).as(default)"
     1,      0,     0,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(c96b740e-fd31-4764-899d-6316ecec1a28)"
     1,     44,    44,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/s3$).as(default)"
     1,     43,    43,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/kms$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Atomikos JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cassandra Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RocketMQ Client).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSocket).as(default)"
     1,      3,     3,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,http://xmlns.jcp.org/xml/ns/persistence).as(default)"
     1,     43,    43,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/picocli$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,beans).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scribe).as(default)"
     1,      1,     1,00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(bc657829-43c6-486f-97c3-83164ca35565)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*oscache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(skipSourceCodeReports,EQUALS,true).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Everit JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AcrIS Security).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache CXF).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.ThreadPoolModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OACC).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging to file system).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Keyczar).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Grails).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,REST Assured).as(default)"
     1,    177,   177,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,false).has(filePath,REGEX,.*\.properties$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.reporting.model.TechnologyUsageStatisticsModel).as(default)
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/io/sentry/jul$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,jboss-web).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*jcache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XMLUnit).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Arquillian).as(default)"
  1695,    277,     0,16, JavaClassService.resolveByQualifiedName(qualifiedClassName)
     1,     95,    95,00, GraphService.findAllWithoutProperty(skipDecompilation)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Lift JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hdiv).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Dagger).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenWS).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebLogic Web XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere EJB Ext).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Weld).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*ignite.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicketBox).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Unirest).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Chunk Templates).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE JSON-P).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Restito).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-webservices-ext.xmi).has(rootTagName,EQUALS,WsExtension).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PowerMock).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cache API).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Shell).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBehave).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).gremlin().has(destinationType,EQUALS,TOPIC).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Meecrowave JTA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jcabi Log).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Airlift Log Manager).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere Web XML).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPAEntityModel).as(default)
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Bean Validation).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSF XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Aries).as(default)"
 49451,     10,     0,00, TypeInterestFactory.matchesAny(text).cacheCheck
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Data JPA).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicoContainer).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.Jbpm3ProcessModel).as(default)
     1,   7204,  7204,00, AnalyzeJavaFilesRuleProvider.parseFiles
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*hazelcast.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,0MQ Client).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*jbosscache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HttpUnit).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/oracle/jdbc$).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*dynacache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Security).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Micrometer).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/biz/paluch/logging$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kafka Client).as(default)"
     1,      5,     5,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,false).has(filePath,REGEX,.+\.\b(|zip|rar|sar|ear|war|jar)\b$).as(default)"
     1,      3,     3,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AspectJ).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,https://jakarta.ee/xml/ns/persistence).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Velocity).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Deployable War).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere WS Binding).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AOP Alliance).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ickenham).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Guava Testing).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Anakia).as(default)"
     2,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.WebXmlModel).as(default)
     1,     44,    44,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/com/amazonaws/serverless/exceptions$).as(default)"
     1,     41,    41,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/software/amazon/awssdk/services/sqs$).as(default)"
     1,      0,     0,00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbEntityBeanModel).as(default)
    87,    190,     2,18, "TypeReferenceService.getPackageUseFrequencies(data,projectModel,nameDepth,recursive)"
     1,     42,    42,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/hibernate/envers$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle Forms).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebXML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Batch).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Flo).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA Mapping XML).as(default)"
     1,      1,     1,00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*ehcache.*\.jar$).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSecurity).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebServices XML).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java Threads).as(default)"
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ActiveMQ).as(default)"
  9971,      0,     0,00, GraphService.create
     1,      0,     0,00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Seam).as(default)"
     1,     44,    44,00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,true).has(filePath,REGEX,.*/org/postgresql$).as(default)"
