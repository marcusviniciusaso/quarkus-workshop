{"id":"2347248","content":"package org.springdoc.core;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.TreeMap;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Lazy;\nimport org.springframework.util.CollectionUtils;\n\n@Lazy(false)\n@Configuration(\n   proxyBeanMethods = false\n)\n@ConfigurationProperties(\n   prefix = \"springdoc.swagger-ui.oauth\"\n)\n@ConditionalOnProperty(\n   name = {\"springdoc.swagger-ui.enabled\"},\n   matchIfMissing = true\n)\n@ConditionalOnBean({SpringDocConfiguration.class})\npublic class SwaggerUiOAuthProperties {\n   private String clientId;\n   private String clientSecret;\n   private String realm;\n   private String appName;\n   private String scopeSeparator;\n   private Map<String, String> additionalQueryStringParams;\n   private Boolean useBasicAuthenticationWithAccessCodeGrant;\n   private Boolean usePkceWithAuthorizationCodeGrant;\n   private List<String> scopes;\n\n   public Map<String, Object> getConfigParameters() {\n      Map<String, Object> params = new TreeMap();\n      SpringDocPropertiesUtils.put(\"clientId\", this.clientId, params);\n      SpringDocPropertiesUtils.put(\"clientSecret\", this.clientSecret, params);\n      SpringDocPropertiesUtils.put(\"realm\", this.realm, params);\n      SpringDocPropertiesUtils.put(\"scopeSeparator\", this.scopeSeparator, params);\n      SpringDocPropertiesUtils.put(\"appName\", this.appName, params);\n      if (!CollectionUtils.isEmpty(this.scopes)) {\n         SpringDocPropertiesUtils.put(\"scopes\", String.join(\" \", this.scopes), params);\n      }\n\n      SpringDocPropertiesUtils.put(\"useBasicAuthenticationWithAccessCodeGrant\", this.useBasicAuthenticationWithAccessCodeGrant, params);\n      SpringDocPropertiesUtils.put(\"usePkceWithAuthorizationCodeGrant\", this.usePkceWithAuthorizationCodeGrant, params);\n      SpringDocPropertiesUtils.put(\"additionalQueryStringParams\", this.additionalQueryStringParams, params);\n      return params;\n   }\n\n   public String getClientId() {\n      return this.clientId;\n   }\n\n   public void setClientId(String clientId) {\n      this.clientId = clientId;\n   }\n\n   public String getClientSecret() {\n      return this.clientSecret;\n   }\n\n   public void setClientSecret(String clientSecret) {\n      this.clientSecret = clientSecret;\n   }\n\n   public String getRealm() {\n      return this.realm;\n   }\n\n   public void setRealm(String realm) {\n      this.realm = realm;\n   }\n\n   public String getAppName() {\n      return this.appName;\n   }\n\n   public void setAppName(String appName) {\n      this.appName = appName;\n   }\n\n   public String getScopeSeparator() {\n      return this.scopeSeparator;\n   }\n\n   public void setScopeSeparator(String scopeSeparator) {\n      this.scopeSeparator = scopeSeparator;\n   }\n\n   public Map<String, String> getAdditionalQueryStringParams() {\n      return this.additionalQueryStringParams;\n   }\n\n   public void setAdditionalQueryStringParams(Map<String, String> additionalQueryStringParams) {\n      this.additionalQueryStringParams = additionalQueryStringParams;\n   }\n\n   public Boolean getUseBasicAuthenticationWithAccessCodeGrant() {\n      return this.useBasicAuthenticationWithAccessCodeGrant;\n   }\n\n   public void setUseBasicAuthenticationWithAccessCodeGrant(Boolean useBasicAuthenticationWithAccessCodeGrant) {\n      this.useBasicAuthenticationWithAccessCodeGrant = useBasicAuthenticationWithAccessCodeGrant;\n   }\n\n   public Boolean getUsePkceWithAuthorizationCodeGrant() {\n      return this.usePkceWithAuthorizationCodeGrant;\n   }\n\n   public void setUsePkceWithAuthorizationCodeGrant(Boolean usePkceWithAuthorizationCodeGrant) {\n      this.usePkceWithAuthorizationCodeGrant = usePkceWithAuthorizationCodeGrant;\n   }\n\n   public List<String> getScopes() {\n      return this.scopes;\n   }\n\n   public void setScopes(List<String> scopes) {\n      this.scopes = scopes;\n   }\n}\n"}