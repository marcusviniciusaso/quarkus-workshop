{"id":"1573096","content":"package ch.qos.logback.classic.util;\n\nimport ch.qos.logback.core.util.Loader;\nimport java.util.Iterator;\nimport java.util.ServiceLoader;\n\npublic class EnvUtil {\n   static ClassLoader testServiceLoaderClassLoader = null;\n\n   public static boolean isGroovyAvailable() {\n      ClassLoader classLoader = Loader.getClassLoaderOfClass(EnvUtil.class);\n\n      try {\n         Class<?> bindingClass = classLoader.loadClass(\"groovy.lang.Binding\");\n         return bindingClass != null;\n      } catch (ClassNotFoundException var2) {\n         return false;\n      }\n   }\n\n   private static ClassLoader getServiceLoaderClassLoader() {\n      return testServiceLoaderClassLoader == null ? Loader.getClassLoaderOfClass(EnvUtil.class) : testServiceLoaderClassLoader;\n   }\n\n   public static <T> T loadFromServiceLoader(Class<T> c) {\n      ServiceLoader<T> loader = ServiceLoader.load(c, getServiceLoaderClassLoader());\n      Iterator<T> it = loader.iterator();\n      return it.hasNext() ? it.next() : null;\n   }\n}\n"}