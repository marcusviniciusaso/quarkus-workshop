{"id":"1880080","content":"package org.springdoc.core.converters.models;\n\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.media.ArraySchema;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport java.util.List;\nimport java.util.Objects;\nimport javax.validation.constraints.Min;\n\npublic class Pageable {\n   @Min(0L)\n   @Parameter(\n      description = \"Zero-based page index (0..N)\",\n      schema = @Schema(\n   type = \"integer\",\n   defaultValue = \"0\"\n)\n   )\n   private Integer page;\n   @Min(1L)\n   @Parameter(\n      description = \"The size of the page to be returned\",\n      schema = @Schema(\n   type = \"integer\",\n   defaultValue = \"20\"\n)\n   )\n   private Integer size;\n   @Parameter(\n      description = \"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\",\n      name = \"sort\",\n      array = @ArraySchema(\n   schema = @Schema(\n   type = \"string\"\n)\n)\n   )\n   private List<String> sort;\n\n   public Pageable(int page, int size, List<String> sort) {\n      this.page = page;\n      this.size = size;\n      this.sort = sort;\n   }\n\n   public Integer getPage() {\n      return this.page;\n   }\n\n   public void setPage(Integer page) {\n      this.page = page;\n   }\n\n   public Integer getSize() {\n      return this.size;\n   }\n\n   public void setSize(Integer size) {\n      this.size = size;\n   }\n\n   public List<String> getSort() {\n      return this.sort;\n   }\n\n   public void setSort(List<String> sort) {\n      if (sort == null) {\n         this.sort.clear();\n      } else {\n         this.sort = sort;\n      }\n\n   }\n\n   public void addSort(String sort) {\n      this.sort.add(sort);\n   }\n\n   public boolean equals(Object o) {\n      if (this == o) {\n         return true;\n      } else if (o != null && this.getClass() == o.getClass()) {\n         Pageable pageable = (Pageable)o;\n         return Objects.equals(this.page, pageable.page) && Objects.equals(this.size, pageable.size) && Objects.equals(this.sort, pageable.sort);\n      } else {\n         return false;\n      }\n   }\n\n   public int hashCode() {\n      return Objects.hash(new Object[]{this.page, this.size, this.sort});\n   }\n\n   public String toString() {\n      return \"Pageable{page=\" + this.page + \", size=\" + this.size + \", sort=\" + this.sort + '}';\n   }\n}\n"}