{"id":"2310384","content":"package ch.qos.logback.core.util;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\npublic class EnvUtil {\n   private static boolean isJDK_N_OrHigher(int n) {\n      List<String> versionList = new ArrayList();\n\n      for(int i = 0; i < 5; ++i) {\n         versionList.add(\"1.\" + (n + i));\n      }\n\n      String javaVersion = System.getProperty(\"java.version\");\n      if (javaVersion == null) {\n         return false;\n      } else {\n         Iterator var3 = versionList.iterator();\n\n         String v;\n         do {\n            if (!var3.hasNext()) {\n               return false;\n            }\n\n            v = (String)var3.next();\n         } while(!javaVersion.startsWith(v));\n\n         return true;\n      }\n   }\n\n   public static boolean isJDK5() {\n      return isJDK_N_OrHigher(5);\n   }\n\n   public static boolean isJDK6OrHigher() {\n      return isJDK_N_OrHigher(6);\n   }\n\n   public static boolean isJDK7OrHigher() {\n      return isJDK_N_OrHigher(7);\n   }\n\n   public static boolean isJaninoAvailable() {\n      ClassLoader classLoader = EnvUtil.class.getClassLoader();\n\n      try {\n         Class<?> bindingClass = classLoader.loadClass(\"org.codehaus.janino.ScriptEvaluator\");\n         return bindingClass != null;\n      } catch (ClassNotFoundException var2) {\n         return false;\n      }\n   }\n\n   public static boolean isWindows() {\n      String os = System.getProperty(\"os.name\");\n      return os.startsWith(\"Windows\");\n   }\n}\n"}